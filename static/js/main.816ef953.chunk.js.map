{"version":3,"sources":["redux/actionTypes.js","redux/reducers.js","redux/combineReducers.js","store.js","redux/actions.js","components/dailyTask.js","components/header.js","components/inprogress.js","components/addProjects.js","App.js","index.js"],"names":["actionTypes","ADDTODO","TOGGLE","DELETE","START","ADDPROJECTS","TOGGLE_PROJECT","DELETE_PROJECT","initialTasks","tasks","initialProjects","projects","reducers","combineReducers","addTodoReducers","state","type","payload","id","title","completed","inprogress","map","el","filter","addProjectsReducers","console","log","store","createStore","compose","applyMiddleware","thunk","window","devToolsExtension","f","currentId","addTodo","projectId","addProjects","AddDailyTask","dispatch","useDispatch","useState","setTitle","useSelector","showForm","setShowForm","counter","useEffect","getData","localStorage","getItem","JSON","parse","data","onToggle","inProgress","toggleTodo","deleteTask","deleteTodo","startTask","completedTasks","task","setItem","stringify","className","onClick","todo","onSubmit","e","preventDefault","trim","value","onChange","target","Header","Inprogress","inprogressTasks","AddProjects","toggleProjects","deleteThis","deleteProject","project","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.816ef953.chunk.js","sourcesContent":["const actionTypes = {\n    ADDTODO: 'ADDTODO',\n    TOGGLE: 'TOGGLE',\n    DELETE: 'DELETE',\n    START: 'START',\n    ADDPROJECTS: 'ADDPROJECTS',\n    TOGGLE_PROJECT: 'TOGGLE_PROJECT',\n    DELETE_PROJECT: 'DELETE_PROJECT'\n}\nexport default actionTypes;","import actionTypes from \"./actionTypes\";\n\nconst initialTasks = {\n    tasks: []\n}\n\nexport const addTodoReducers = ( state = initialTasks, { type, payload }) => {\n\n    switch(type){\n        case actionTypes.ADDTODO:{\n            const { id, title} = payload\n            return (\n                {\n                tasks: [\n                    ...state.tasks,\n                    {title, completed: false, inprogress: false,id}\n                ]\n            }\n            )\n        }\n        case actionTypes.TOGGLE:{\n            const {id} = payload\n            const tasks = state.tasks.map(el => el.id === id ? { ...el ,completed: !el.completed,inprogress: false} : el);\n            return (\n                {\n                    tasks\n                }\n            )\n        }\n        case actionTypes.DELETE:{\n            const {id} = payload\n            const tasks = state.tasks.filter(el => el.id !== id)\n            return (\n                {\n                    tasks\n                }\n            )\n        }\n        case actionTypes.START:{\n            const {id} = payload\n            const tasks = state.tasks.map(el => el.id === id ? { ...el, inprogress: !el.inprogress} : el);\n            return(\n                {\n                    tasks\n                }\n            )\n        }\n        default:\n            return state;\n    }\n}\nconst initialProjects = {\n    projects: []\n}\nexport const addProjectsReducers = (state = initialProjects, { type, payload} ) => {\n\n    switch(type){\n        case actionTypes.ADDPROJECTS:{\n            const { title, id} = payload;\n            return {\n                projects: [...state.projects,\n                            {title: title, completed: false, id}]\n            }\n        }\n        case actionTypes.TOGGLE_PROJECT:{\n            const { id } = payload;\n            console.log(state.projects)\n            const projects = state.projects.map(el => el.id === id ? {...el,completed : !el.completed} : el)\n            return({\n                projects\n            })\n        }\n        case actionTypes.DELETE_PROJECT:{\n            const { id } = payload;\n            const projects = state.projects.filter(el => el.id !== id)\n            return({\n                projects\n            })\n        }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport {addTodoReducers, addProjectsReducers} from \"./reducers\";\n\nconst reducers = combineReducers({\n    addTodoReducers,\n    addProjectsReducers,\n})\nexport default reducers;","import { applyMiddleware, createStore } from \"redux\"\nimport reducers from \"./redux/combineReducers\"\nimport thunk from \"redux-thunk\";\nimport { compose } from \"redux\";\n\nconst store = createStore(reducers,compose(applyMiddleware(thunk),window.devToolsExtension ? window.devToolsExtension() : f => f))\n\nexport default store;","import actionTypes from \"./actionTypes\";\n\nlet currentId = 0;\nexport const addTodo = (title) => ({\n    type: actionTypes.ADDTODO,\n    payload: {\n        id: ++currentId,\n        title\n    }\n})\nexport const toggleTodo = (id) => ({\n    type: actionTypes.TOGGLE,\n    payload: {\n        id\n    }\n})\nexport const deleteTodo = (id) => ({\n    type: actionTypes.DELETE,\n    payload: {\n        id\n    }\n})\nexport const startTask = (id) => ({\n    type: actionTypes.START,\n    payload: {\n        id\n    }\n})\nlet projectId = 0;\nexport const addProjects = (title) => ({\n    type: actionTypes.ADDPROJECTS,\n    payload: {\n        id: ++projectId,\n        title\n    }\n})\nexport const toggleProjects = (id) => ({\n    type: actionTypes.TOGGLE_PROJECT,\n    payload: {\n        id\n    }\n})\nexport const deleteProject = (id) => ({\n    type: actionTypes.DELETE_PROJECT,\n    payload: {\n        id\n    }\n})","import React,{useState,useEffect} from 'react';\nimport '../style/dailyTask.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTodo, toggleTodo, deleteTodo, startTask } from '../redux/actions';\n\nconst AddDailyTask = () => {\n    const dispatch = useDispatch();\n    const [ title, setTitle ] = useState(\"\")\n    let tasks = useSelector((state) => state.addTodoReducers.tasks)\n\n    const [ showForm , setShowForm ] = useState(false);\n\n    let counter = 0;\n\n    // ONCHANGE\n    const handleOnChange = (e) => {\n        setTitle(e.target.value);\n    }\n    // SUBMIT\n    useEffect(() => {\n        let getData = localStorage.getItem('tasks')\n            if( getData !== ''){\n                getData = JSON.parse(getData)\n            }else{\n                getData = []\n            }\n            console.log(getData)\n            getData?.map(data => {\n                dispatch(addTodo(data.title)) //Dispatch everytime when refresh\n                console.log(data.completed)\n                if( data.completed === true){\n                    onToggle(data.id);\n                }\n                if( data.inprogress === true){\n                    inProgress(data.id)\n                }\n            })\n    },[])\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if( title.trim() !== ''){\n            dispatch(addTodo(title))\n        }\n        setTitle('')\n        setShowForm(!showForm)\n    }\n    // TOGGLE\n    const onToggle = (id) => {\n        dispatch(toggleTodo(id))\n    }\n    // DELETE\n    const deleteTask = (id) => {\n        dispatch(deleteTodo(id))\n    }\n    // INPROGRESS\n    const inProgress = (id) => {\n        console.log('hi')\n            dispatch(startTask(id))\n    }\n    const completedTasks = tasks.filter(task => task.completed)\n    console.log(completedTasks)\n\n    const showFormHandler = () => {\n        setShowForm(!showForm)\n    }\n\n    useEffect(() => {\n        if( tasks !== '' || tasks !== null){\n            localStorage.setItem('tasks',JSON.stringify(tasks))\n        }\n\n    },[tasks])\n\n    return(\n        <>\n        <div className=\"dailyTask-container\">\n            <div className=\"dailyTask-header\">\n                <div className=\"dailyTask-title\"><div className=\"title-text\">Daily Task</div></div>\n                <div className=\"dailyTask-addTodo-btn\" onClick={showFormHandler}>+</div>\n            </div>\n            <div className=\"dailyTask-list-wrapper\">\n                <div className=\"dailyTask-list\">\n                    {tasks.map(todo => {\n                        return <div key={todo.id}  className=\"dailyTask-list-item\">\n                                <div className=\"dailyTask-list-caption\">\n                                    <div className=\"dailyTask-list-caption-no\">\n                                        <div className=\"dailyTask-list-caption-no-text\">\n                                            {++counter}\n                                        </div>\n                                    </div>\n                                    <div className={todo.completed ? \"dailyTask-list-caption-title line-through\": \"dailyTask-list-caption-title\"}>\n                                        {todo.title}\n                                    </div>\n                                </div>\n                                <div className=\"dailyTask-list-item-btns\">\n                                <button onClick={() => todo.completed ?  '': inProgress(todo.id)} className=\"btn start-btn\"><i className=\"fas fa-stopwatch\"></i></button>\n                                <button onClick={() => onToggle(todo.id)} className=\"btn done-btn\"><i className=\"far fa-check-square\"></i></button>\n                                <button onClick={() => deleteTask(todo.id)} className=\"btn delete-btn\"><i className=\"far fa-trash-alt\"></i></button>\n                                </div>\n                                </div>\n                    })}\n                </div>\n            </div>\n            <div className={showForm ? \"form-wrapper\": \"form-wrapper-hide\"}>\n                <form onSubmit={handleSubmit}>\n                    <input value={title} onChange={handleOnChange} type=\"text\"></input>\n                    <button type=\"submit\" className=\"addtask\">ADD</button>\n                </form>\n            </div>\n        </div>\n        </>\n    )\n}\nexport default AddDailyTask;\n","import React from 'react';\nimport '../style/header.css';\n\nconst Header = () => {\n\n    return(\n        <>\n            <div className='header-container'>\n                <div className='header-logo-wrapper'>\n                    <div className='header-logo'>\n                        DODO\n                    </div>\n                </div>\n                <div className='header-avatar-wrapper'>\n                    <div className='header-avatar'>\n                        P\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default Header;","import React,{ useEffect} from 'react';\nimport '../style/inProgress.css'\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Inprogress = () => {\n    const dispatch = useDispatch()\n    const tasks = useSelector((state) => state.addTodoReducers.tasks)\n    const inprogressTasks = tasks.filter(task => task.inprogress)\n    console.log(inprogressTasks);\n\n    let counter = 0;\n\n    return(\n        <>\n        <div className=\"inprogress-container\">\n            <div className=\"inprogress-title\">\n                <div className=\"inprogress-title-text\">\n                    In Progress\n                </div>\n            </div>\n            <div className=\"inprogress-items-wrapper\">\n                <div className=\"inprogress-items-wrapper-2\">\n                    {inprogressTasks.map(task => {\n                        return <div key={task.id} className=\"inprogress-item\">\n                                <div className=\"inprogress-item-no\">\n                                    {++counter}.\n                                </div>\n                                <div className=\"inprogress-item-title\">\n                                    {task.title}\n                                </div>\n                            </div>\n                    })}\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\nexport default Inprogress;","import React,{ useState, useEffect} from 'react';\nimport '../style/projects.css'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addProjects, deleteProject, toggleProjects } from '../redux/actions';\n\nconst AddProjects = () => {\n\n    const dispatch = useDispatch();\n    const projects = useSelector((state) => state.addProjectsReducers.projects);\n    const [ title, setTitle ] = useState('')\n    console.log(projects)\n    const [ showForm, setShowForm ] = useState(false);\n    let counter = 0;\n\n    // ONCHANGE\n    const handleOnChange = (e) => {\n        setTitle(e.target.value);\n    }\n    //SUBMIT\n    useEffect(() => {\n        let getData = localStorage.getItem('projects')\n        if( getData !== ''){\n            getData = JSON.parse(getData)\n        }else{\n            getData = []\n        }\n        getData.map(data => {\n            dispatch(addProjects(data.title))\n            if( data.completed == true) {\n                onToggle(data.id);\n            }\n        })\n    },[])\n    useEffect(() => {\n        if( projects !== '' || projects !== null){\n            localStorage.setItem('projects',JSON.stringify(projects))\n        }\n    },[projects])\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(title.trim() !== '' ){\n            dispatch(addProjects(title))\n        }\n        setTitle('')\n        setShowForm(!showForm)\n    }\n    //TOGGLE\n    const onToggle = (id) => {\n        dispatch(toggleProjects(id))\n    }\n    //DELETE\n    const deleteThis = (id) => {\n        dispatch(deleteProject(id))\n    }\n\n    const showFormHandler = () => {\n        setShowForm(!showForm)\n    }\n\n\n    return(\n        <>\n        <div className=\"projects-container\">\n            <div className=\"projects-header\">\n                <div className=\"projects-header-title\"><div className=\"projects-header-title-text\">Projects</div></div>\n                <div className=\"addproject-btn\" onClick={showFormHandler}>+</div>\n            </div>\n        <div className=\"projects-items-wrapper\">\n            <div className=\"projects-items-wrapper-2\">\n                    {projects.map(project => {\n                    return <div key={project.id} className=\"project-list-item-wrapper\">\n                        <div className=\"counter\">{++counter}</div>\n                                    <div className={project.completed ? \"project-list-item-title-line-through\": \"project-list-item-title\"}>{project.title}</div>\n                                        <div className=\"project-list-item-btns\">\n                                        {/* <button onClick={() => inProgress(project.id)} className=\"btn start-btn\">Start</button> */}\n                                        <button onClick={() => onToggle(project.id)} className=\"project-item-btn done-btn\"><i className=\"far fa-check-square\"></i></button>\n                                        <button onClick={() => deleteThis(project.id)} className=\"project-item-btn delete-btn\"><i className=\"far fa-trash-alt\"></i></button>\n                                        </div></div>\n                })}\n            </div>\n        </div>\n            <div className={showForm ? 'project-form-wrapper': 'project-form-wrapper-hide'}>\n                <form onSubmit={handleSubmit}>\n                    <input value={title} onChange={handleOnChange} type=\"text\" placeholder=\"addTasks here\"></input>\n                    <button type=\"submit\" className=\"addtask\">ADD</button>\n                </form>\n            </div>\n        </div>\n        </>\n    )\n}\nexport default AddProjects;","import React from 'react';\nimport './App.css'\nimport AddDailyTask from './components/dailyTask';\nimport Header from './components/header';\nimport Inprogress from './components/inprogress';\nimport AddProjects from './components/addProjects';\n\nconst App = () => {\n\n    return(\n        <>\n        <div className='app-container'>\n            <div className='app-header'>\n                <Header />\n            </div>\n            <div className='app-dailytask'>\n                <AddDailyTask />\n            </div>\n            <div className='app-inprogress'>\n                <Inprogress />\n            </div>\n            <div className='app-projects'>\n                <AddProjects />\n            </div>\n        </div>\n        </>\n    )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport store from './store';\nimport { Provider } from 'react-redux';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store = {store}>\n        <App />\n    </Provider>\n    ,document.getElementById(\"root\")\n)"],"sourceRoot":""}